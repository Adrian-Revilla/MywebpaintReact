{"version":3,"sources":["Componentes/Header.js","Componentes/Canvas.js","Componentes/Opciones.js","Componentes/Menu.js","Componentes/Modal.js","Componentes/App.js","index.js"],"names":["Header","props","className","id","style","fontSize","href","Canvas","width","CanvasWidthSize","height","CanvasIcon","onMouseDown","StartDraw","onMouseMove","MovingDraw","onMouseUp","OutDrawOrOutCanvas","onMouseLeave","Opciones","color","BrushColor","BrushColorName","onClick","ChangeColor","CanvasIconEraser","cleanAll","ToggleModal","disabled","Disabled","Menu","children","Modal","display","VisibleModal","animationIn","animationOut","isVisible","Animation","animateOnMount","tabIndex","class","App","useState","CanvasContext","setCanvasContext","setCanvasWidthSize","setCanvasIcon","IsMousePressed","setIsMousePressed","SetBrushColor","SetBrushColorName","setVisibleModal","setAnimation","setDisabled","useEffect","document","querySelector","getContext","CanvasContainerOffsetWidth","getElementById","offsetWidth","Math","trunc","window","addEventListener","e","key","setTimeout","CanvasIconBrush","documentElement","focus","strokeStyle","lineWidth","lineCap","beginPath","moveTo","nativeEvent","offsetX","offsetY","clearRect","lineTo","stroke","closePath","target","nodeName","toLowerCase","getComputedStyle","parentElement","backgroundColor","innerText","canvas","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3b042dcf.chunk.js","sourcesContent":["import React from 'react'\nconst Header = (props) => {\n  return (\n    <header className=\"header\">\n      <h1 id=\"title\">\n        <i className='fas fa-mouse-pointer' style={{ fontSize: '40px' }}></i>\n        &nbsp;¡Dibuja con tu mouse!\n      </h1>\n      <span id=\"author\">@Adrian-Revilla </span> &nbsp;\n      <a id=\"github\" href=\"https://github.com/Adrian-Revilla\" ><i className=\"fab fa-github\" style={{ fontSize: '40px' }}></i> </a>\n    </header>\n  )\n}\nexport default Header;","import React from 'react'\n\nconst Canvas = (props) => {\n  return (<div id=\"canvas_container\">\n    <canvas width={`${props.CanvasWidthSize}`} height=\"500\"\n      id=\"canvas\"\n      className={`${props.CanvasIcon}`} \n      onMouseDown={props.StartDraw}\n      onMouseMove={props.MovingDraw}    \n      onMouseUp={props.OutDrawOrOutCanvas}\n      onMouseLeave={props.OutDrawOrOutCanvas}\n    >\n      El canvas no esta soportado\n    </canvas>\n  </div>\n  )\n\n}\n\n\nexport default Canvas;\n\n","import React from 'react';\n// import pic from '../assets/images/interrogativo.png';\n\nconst Opciones = (props) => {\n  return (\n    <>\n      <h2>\n        <i className=\"fas fa-palette\" style={{ fontSize: '30px', color: `${props.BrushColor}` }}></i>\n        <span style={{color: `${props.BrushColor}` }}>{`${props.BrushColorName}`}</span>\n      </h2>\n\n      <button id=\"red\" onClick={props.ChangeColor}><i className=\"fas fa-tint\"></i> Rojo</button>\n      <button id=\"green\" onClick={props.ChangeColor}><i className=\"fas fa-leaf\"></i> Verde</button>\n      <button id=\"blue\" onClick={props.ChangeColor}><i className=\"fas fa-water\"></i> Azul</button>\n      <button id=\"limpiar_partes\" onClick={props.CanvasIconEraser} ><i className=\"fas fa-eraser\"></i> Borrador</button>\n      <button id=\"limpiar\" onClick={props.cleanAll} ><i className=\"fas fa-backspace\"></i> Limpiar</button>\n      <button id=\"help\" onClick={props.ToggleModal} disabled={props.Disabled} ><i className=\"far fa-question-circle\" style={{ fontSize: '30px' }}  ></i></button>\n\n    </>\n  );\n}\n\nexport default Opciones;","import React from 'react';\n\nconst Menu = (props) => {\n  return (\n    <div id=\"Menu\"  >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Menu;","import React from 'react';\nimport { Animated } from 'react-animated-css'\nconst Modal = (props) => {\n  return (\n    <div className=\"Absolute\" style={{ display: `${props.VisibleModal}` }}>\n      <Animated animationIn=\"fadeInUp\" animationOut=\"zoomOut\" isVisible={props.Animation} animateOnMount={false} >\n        <section className=\"MyModal\">\n          <section className=\"MyModal-body\">\n            <div className=\"header-flex\">\n              <h3>Información</h3>\n               <i id=\"header_exit\" tabIndex=\"0\" className=\"fas fa-external-link-alt\" onClick={props.ToggleModal} ></i>\n            </div>\n            \n            <div className=\"section-flex\">\n              <p><i class=\"fas fa-check\"></i> Pulsa con el boton izquierdo de tu mouse y arrastralo por el lienzo para pintarlo </p>\n              <p><i class=\"fas fa-check\"></i> Haz click en los botones para cambiar el color del pincel</p>\n              <p><i class=\"fas fa-check\"></i> El <q>Borrador</q> borra una area especifica del lienzo  </p>\n              <p><i class=\"fas fa-check\"></i> El boton <q>Limpiar</q> hace lo que indica, ¡limpia todo el lienzo!</p>\n            </div>\n            <button id=\"exit\" onClick={props.ToggleModal}><i class=\"far fa-thumbs-up\"></i> ¡Entendido!</button>\n          </section>\n        </section>\n      </Animated>\n    </div>\n  );\n}\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport Header from './Header'\nimport Canvas from './Canvas'\nimport Opciones from './Opciones';\nimport Menu from './Menu';\nimport Modal from './Modal'\n\n\nconst App = () => {\n\n  //CONTEXTO DE CANVAS API\n  let [CanvasContext, setCanvasContext] = useState('');\n\n  // SIZE DEL CANVAS\n  let [CanvasWidthSize, setCanvasWidthSize] = useState('');\n\n  //ICONO ACTUAL DEL <canvas></canvas>\n  let [CanvasIcon, setCanvasIcon] = useState('Brush');\n\n  //DETECTAR CUANDO EL MOUSE ESTA PRESIONADO\n  let [IsMousePressed, setIsMousePressed] = useState(false);\n\n  // COLOR DEL PINCEL O BRUSH, \n  let [BrushColor, SetBrushColor] = useState('rgb(52, 52, 151)');\n\n  //EL NOMBRE DEL COLOR ACTUAL EN EL TITULO DE OPCIONES\n  let [BrushColorName, SetBrushColorName] = useState(' Azul');\n\n  //Estado inicial del modal de ayuda\n  let [VisibleModal, setVisibleModal] = useState('none');\n\n  //Estado de la animacion del modulo React Animate\n  let [Animation, setAnimation] = useState(false);\n\n  //Propiedad booleana para el boton de ayuda\n  let [Disabled, setDisabled] = useState(false);\n\n  // CONTEXTO DE LA API CANVAS AL CARGAR LA APP\n  useEffect(() => setCanvasContext(document.querySelector('canvas').getContext('2d')), [CanvasContext])\n\n\n  // AJUSTAR EL TAMAÑO DEL <canvas></canvas>\n  // math.trunc quita los decimales del offset width (solo es una medida para evitar errores)\n  // ESTOS VALORES SE COLOCAN LUEGO EN EL ATRIBUTO  \"Width\" del  canvas\n  useEffect(() => {\n    let CanvasContainerOffsetWidth;\n\n    //la primera vez que se renderiza, se establece el offset height del navegador.\n    if (CanvasWidthSize === '') {\n      CanvasContainerOffsetWidth = document.getElementById('canvas_container').offsetWidth;\n      setCanvasWidthSize(Math.trunc(CanvasContainerOffsetWidth));\n    }\n\n    //SI SE HACE RESIZE A LA VENTANA, SE ACTUALIZA EL WIDTH DEL CANVAS\n    window.addEventListener('resize', () => {\n      CanvasContainerOffsetWidth = document.getElementById('canvas_container').offsetWidth;\n      setCanvasWidthSize(Math.trunc(CanvasContainerOffsetWidth));\n    })\n\n  }, [CanvasWidthSize]);\n\n  //MANEJAR LA TECLA ESCAPE SI ESTE SE PULSA CUANDO EL MODAL ESTA ACTIVO\n  useEffect(() => {\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && VisibleModal === 'block') {\n\n        //remueve la animacion\n        setAnimation(false);\n\n        //habilita el boton de ayuda\n        setDisabled(false);\n\n        //pasado un tiempo hace del modal un display none, para que este no interrumpa al canvas.\n        setTimeout(() => setVisibleModal('none'), 400);\n      }\n\n    })\n  })\n\n  //cuando se hace click en el canvas.\n  const StartDraw = (e) => {\n    if (!IsMousePressed) {\n      // si el icono actual es de un 'Brush' empieza prepara el dibujado\n      if (CanvasIcon === 'Brush') {\n\n        CanvasContext.strokeStyle = BrushColor;\n        CanvasContext.lineWidth = 5;\n        CanvasContext.lineCap = \"round\";\n        CanvasContext.beginPath();\n        CanvasContext.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n\n        // si no es 'Brush' entonces borra en un area de 32 pixeles (un cuadrado)\n      } else { CanvasContext.clearRect(e.nativeEvent.offsetX, e.nativeEvent.offsetY, 32, 32) }\n\n      //cambia  el estado\n      setIsMousePressed(true);\n    }\n  }\n\n  //dibuja en el canvas SOLO si ya se ha hecho click ( si se ha disparado StartDraw) \n  //  y se esta moviendo el mouse con el boton presionado\n  const MovingDraw = (e) => {\n\n    if (IsMousePressed) {\n      if (CanvasIcon === 'Brush') {\n        CanvasContext.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n        CanvasContext.stroke();\n        // borra en un area de 32 pixeles a medida que se mueve\n      } else { CanvasContext.clearRect(e.nativeEvent.offsetX, e.nativeEvent.offsetY, 32, 32) }\n    }\n  }\n\n\n  //SI EL PUNTERO SE SALE DEL AREA DEL CANVAS O ESTE DEJA DE PRESIONAR EL BOTON IZQUIERDO:\n  const OutDrawOrOutCanvas = () => {\n    if (IsMousePressed) {\n      if (CanvasIcon === 'Brush') {\n        CanvasContext.closePath();\n      }\n      setIsMousePressed(false);\n    }\n  }\n\n  // cambian el color del pincel con el backgroundColor del boton del cual se esta presionando con SetBrushColor\n  // y ademas cambian el nombre del titulo del MENU con setBrushColorName\n  const ChangeColor = (e) => {\n    // se identifica que se clickeó\n    let _e = e.target.nodeName.toLowerCase();\n\n    //si fue el icono navega el DOM y establece el color\n    if (_e === \"i\") {\n      SetBrushColor(`${getComputedStyle(e.target.parentElement).backgroundColor}`)\n      SetBrushColorName(`${e.target.parentElement.innerText}`)\n      //si solo fue el boton entonces solo toma el color del background directamente\n    } else {\n      SetBrushColor(`${getComputedStyle(e.target).backgroundColor}`)\n      SetBrushColorName(`${e.target.innerText}`)\n    }\n\n    CanvasIconBrush()\n  }\n\n  //LIMPIA TODA LA ETIQUETA CANVAS\n  const cleanAll = () => {\n    let canvas = document.querySelector('canvas');\n    CanvasContext.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  // Cambian los iconos del canvas (diseño del cursor)\n  const CanvasIconBrush = () => setCanvasIcon('Brush');\n  const CanvasIconEraser = () => setCanvasIcon('Eraser');\n\n  //MANEJA EL DESPLIEGUE DEL MODAL DE AYUDA\n  const ToggleModal = () => {\n\n\n    if (VisibleModal === 'none') {\n      \n      setVisibleModal('block')\n      setAnimation(true);\n      setDisabled(true);\n\n      // vuelve a ajustar el focos en el navegador que perdió debido al setDisabled\n      document.documentElement.focus();\n\n    } else {\n      setAnimation(false);\n      setDisabled(false);\n      setTimeout(() => setVisibleModal('none'), 400);\n    }\n\n  }\n\n  return (\n\n    <>\n      {/* MENSAJE DE ALERTA */}\n      <div id=\"announcement\">\n        <h1>La aplicacion no esta desarrollada a este punto :)</h1>\n      </div>\n\n      <Header />\n\n      {/* CONTENDOR FLEX. */}\n      <main>\n\n        <Canvas\n          CanvasWidthSize={CanvasWidthSize}\n          StartDraw={StartDraw}\n          MovingDraw={MovingDraw}\n          OutDrawOrOutCanvas={OutDrawOrOutCanvas}\n          CanvasIcon={CanvasIcon}\n        />\n\n        <Menu>\n\n\n          <Opciones\n            ChangeColor={ChangeColor}\n            BrushColor={BrushColor}\n            BrushColorName={BrushColorName}\n            CanvasIconEraser={CanvasIconEraser}\n            cleanAll={cleanAll}\n            ToggleModal={ToggleModal}\n            Disabled={Disabled}\n          />\n\n        </Menu>\n\n      </main>\n      \n      <Modal VisibleModal={VisibleModal} Animation={Animation} ToggleModal={ToggleModal} />\n      \n    </>\n\n\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './assets/scss/App.scss';\nimport App from './Componentes/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}